using Estrol.X3Jam.Server.CData;
using Estrol.X3Jam.Utility;

namespace Estrol.X3Jam.Server.CHandler {
    public class CCharacter: CBase {
        public CCharacter(Client client) : base(client) { }

        public override void Code() {
            Write((short)0);
            Write((short)0x7d1);
            Write(0);
            Write(Client.UserInfo.Nickname);
            Write((byte)Client.UserInfo.Char.Gender); // Female Character

            Write(new byte[] { 0xC6, 0xF5, 0x02, 0x00, 0x96, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
            Write(Client.UserInfo.Char.Level);
            Write(new byte[] {
                0x54, 0x03, 0x00, 0x00, 0xAF, 0x01, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0xBD, 0x30, 0x05, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00
            });

            int[] Avatar = Client.UserInfo.Char.ToArray();
            for (int i = 0; i < Avatar.Length; i++) {
                Write((short)Avatar[i]);
                Write((short)0);
            }

            // Todo: Analyze this later.
            Write(new byte[] {
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x95, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x97, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xEF, 0x00, 0x00, 0x01,
                0x09, 0x01, 0x1E, 0x01, 0x40, 0x01, 0x4E, 0x01, 0x50, 0x01, 0x51, 0x01, 0x57, 0x01, 0x59, 0x01,
                0x84, 0x01, 0x8A, 0x01, 0x93, 0x01, 0xBB, 0x01, 0xDD, 0x01, 0xE1, 0x01, 0xE2, 0x01, 0xE3, 0x01,
                0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x07, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x9B, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00
            });

            Log.Write("[{0}@{1}] Character Info", Client.UserInfo.Username, Client.IPAddr);

            SetL();
            Send();
        }
    }
}
