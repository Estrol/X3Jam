using Estrol.X3Jam.Server.Data;
using Estrol.X3Jam.Server.Utils;
using System;
using System.Text;

namespace Estrol.X3Jam.Server.Handlers {
    public class PlayerCharacter : Base {
        public PlayerCharacter(Connection state, PacketManager PM) : base(state) {
            User user = state.UserInfo;

            Write((short)0);
            Write(new byte[] { 0xd1, 0x07 });
            Write(new byte[4]);
            Write(Encoding.GetEncoding(1252).GetBytes(user.GetUsername().ToCharArray()));
            Write(0x00);
            Write(0x01); // Female character

            Write(new byte[] {
                0xC6, 0xF5, 0x02, 0x00, 0x96, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x02, 0x00, 0x00,
                0x46, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x9A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xF7, 0x10, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0xCF,
                0xB5, 0x3F, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                0x00, 0x00, 0x00, 0x9A, 0x00, 0x00, 0x00, 0xE1, 0x03, 0x00, 0x00
            });

            /**
            Write(new byte[] { 0xec, 0x12 });
            Write(new byte[] {
                0x02, 0x00, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x54, 0x03,
                0x00, 0x00, 0xAF, 0x01, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0xBD, 0x30, 0x05, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00
            });

            // Instrument
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Hair
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Accessories
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Gloves
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Necklaces
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Shirts
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Pants
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Glasses
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Earrings
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Clothes Accs
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Shoes
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Faces
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Wings
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Instruments Accs
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Pets
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Hair Accs.
            Write(new byte[] {
                0x00, 0x00
            });
            Write((short)0);

            // Data Dump because why not?
            Write(new byte[] {
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x9B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x95, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x97, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xEF, 0x00, 0x00, 0x01,
                0x09, 0x01, 0x1E, 0x01, 0x40, 0x01, 0x4E, 0x01, 0x50, 0x01, 0x51, 0x01, 0x57, 0x01, 0x59, 0x01,
                0x84, 0x01, 0x8A, 0x01, 0x93, 0x01, 0xBB, 0x01, 0xDD, 0x01, 0xE1, 0x01, 0xE2, 0x01, 0xE3, 0x01,
                0xE4, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x07, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x9B, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x93, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x95, 0x00, 0x00, 0x00,
                0xE7, 0x03, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00
            });*/

            Console.WriteLine("[Server] [{0}] Get character info!", state.UserInfo.GetUsername());

            SetLength((short)base.m_MemoryStream.Length);
            Send();
        }
    }
}
